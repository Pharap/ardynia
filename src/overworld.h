#ifndef overworld_h
#define overworld_h

#include "emptyRoom.h"
#include "entityTypes.h"
#include "entityExpressions.h"


const uint8_t PROGMEM overworld_map[482] = {
    // array length (16 bit, little endian), map width, map height (in rooms)
    226, 1, 7, 7,
    // room indices (16 bit, little endian), 98 bytes
    // room 0, index 0
    0, 0,
    // room 1, index 11
    11, 0,
    // room 2, index 20
    20, 0,
    // room 3, index 25
    25, 0,
    // room 4, index 32
    32, 0,
    // room 5, index 35
    35, 0,
    // room 6, index 39
    39, 0,
    // room 7, index 47
    47, 0,
    // room 8, index 57
    57, 0,
    // room 9, index 63
    63, 0,
    // room 10, index 68
    68, 0,
    // room 11, index 76
    76, 0,
    // room 12, index 87
    87, 0,
    // room 13, index 95
    95, 0,
    // room 14, index 100
    100, 0,
    // room 15, index 106
    106, 0,
    // room 16, index 116
    116, 0,
    // room 17, index 119
    119, 0,
    // room 18, index 125
    125, 0,
    // room 19, index 132
    132, 0,
    // room 20, index 138
    138, 0,
    // room 21, index 148
    148, 0,
    // room 22, index 155
    155, 0,
    // room 23, index 161
    161, 0,
    // room 24, index 166
    166, 0,
    // room 25, index 173
    173, 0,
    // room 26, index 181
    181, 0,
    // room 27, index 189
    189, 0,
    // room 28, index 200
    200, 0,
    // room 29, index 208
    208, 0,
    // room 30, index 212
    212, 0,
    // room 31, index 222
    222, 0,
    // room 32, index 229
    229, 0,
    // room 33, index 240
    240, 0,
    // room 34, index 248
    248, 0,
    // room 35, index 260
    4, 1,
    // room 36, index 269
    13, 1,
    // room 37, index 274
    18, 1,
    // room 38, index 280
    24, 1,
    // room 39, index 290
    34, 1,
    // room 40, index 299
    43, 1,
    // room 41, index 306
    50, 1,
    // room 42, index 317
    61, 1,
    // room 43, index 326
    70, 1,
    // room 44, index 335
    79, 1,
    // room 45, index 343
    87, 1,
    // room 46, index 352
    96, 1,
    // room 47, index 361
    105, 1,
    // room 48, index 370
    114, 1,

    // compressed room data, 380 bytes
    0x1f, 0x6d, 0x20, 0x44, 0x40, 0x2, 0x4, 0x44, 0x0, 0x2f, 0x60, 0xd6, 0xf5, 0xd0, 0x6f, 0x60, 0x6f, 0x60, 0x6f, 0x50, 0xf7, 0xdf, 0xf0, 0xf6, 0x0, 0xdd, 0xf5, 0x40, 0xf, 0x54, 0xfe, 0x0, 0xfe, 0x4f, 0xe0, 0xfe, 0x4f, 0xd0, 0x60, 0xfb, 0x48, 0x79, 0xf6, 0xc, 0xf4, 0x64, 0x44, 0x2f, 0x60, 0x66, 0x5f, 0x46, 0x2f, 0x60, 0x44, 0xf5, 0x0, 0x6, 0xf5, 0xf, 0x76, 0xfe, 0x0, 0xf7, 0xf, 0x76, 0xfe, 0x0, 0xf7, 0xf, 0x76, 0xf5, 0x6, 0x6f, 0x50, 0x66, 0xf7, 0x6, 0x66, 0xf4, 0x6, 0x66, 0xf4, 0x6, 0x66, 0xf4, 0x0, 0xf6, 0x6, 0xf6, 0x6, 0xf6, 0x6, 0xf6, 0x4, 0xfb, 0x6f, 0xe4, 0x0, 0x40, 0x44, 0xf5, 0xf, 0xf4, 0xf6, 0x40, 0xf7, 0x4, 0xf6, 0x4, 0x66, 0x65, 0x64, 0x4f, 0x50, 0x40, 0xfe, 0xf, 0xe4, 0xf5, 0x6, 0x6f, 0x70, 0xfe, 0x40, 0x66, 0x6f, 0xb0, 0x4f, 0x60, 0x4f, 0x60, 0xf6, 0x4, 0xff, 0xf, 0x50, 0x40, 0xf4, 0x40, 0x4, 0xf6, 0xe, 0xf6, 0xe, 0x44, 0xf, 0x44, 0xf7, 0x42, 0xf6, 0x2, 0xf6, 0xf, 0x74, 0x4f, 0x50, 0x4f, 0xe0, 0x4f, 0x60, 0xf7, 0x4f, 0xf0, 0xf, 0x54, 0xf7, 0x4f, 0x50, 0x44, 0xf6, 0xf, 0x84, 0x4f, 0x60, 0x4f, 0x60, 0x4f, 0x60, 0x4f, 0x60, 0xf6, 0x4, 0xf6, 0x4, 0xf6, 0x4, 0xf, 0x64, 0x44, 0xf, 0x54, 0xf5, 0xe, 0x40, 0x4, 0xf, 0x64, 0x4, 0x40, 0xf7, 0x42, 0xf6, 0x2, 0xf6, 0x2, 0xf6, 0x0, 0x4f, 0xf0, 0xfc, 0x0, 0x0, 0xf5, 0x40, 0xf, 0x54, 0x0, 0xf5, 0x40, 0xf, 0x54, 0xf8, 0x4f, 0x60, 0x4f, 0x60, 0xf7, 0x40, 0x4f, 0x80, 0xf4, 0x40, 0x0, 0xf4, 0x40, 0x44, 0x40, 0x4, 0x40, 0xf, 0x64, 0x4, 0xf6, 0x4, 0xf5, 0xf, 0x74, 0xf4, 0x40, 0x44, 0x0, 0x4, 0x4, 0x4f, 0x50, 0x44, 0x40, 0xf, 0x44, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x50, 0x40, 0xff, 0xf, 0x60, 0x4f, 0x60, 0x0, 0xf5, 0x4f, 0xf0, 0xf5, 0x4, 0xf7, 0x4f, 0x50, 0x44, 0xf5, 0x4, 0x44, 0xf4, 0x4, 0x40, 0x44, 0x40, 0x4, 0x44, 0xf6, 0x4, 0xf6, 0xf, 0x74, 0xf7, 0x4f, 0xe0, 0x40, 0x0, 0x44, 0x40, 0x40, 0xf, 0x54, 0x0, 0xf5, 0x40, 0xf, 0x54, 0x0, 0xf4, 0x40, 0x2f, 0x50, 0x4f, 0x56, 0x56, 0x2f, 0x50, 0x4f, 0x76, 0x4f, 0x60, 0x66, 0xf5, 0x4, 0x6f, 0x50, 0xf7, 0x60, 0xf6, 0x4, 0xf6, 0x4, 0xf6, 0x4, 0xf7, 0x60, 0x4f, 0x40, 0x44, 0x4f, 0x60, 0x4f, 0x60, 0xf7, 0x60, 0x44, 0x48, 0x79, 0x4f, 0x60, 0x4f, 0x60, 0x4f, 0x76, 0x40, 0x0, 0xf4, 0x4f, 0x60, 0x4f, 0x60, 0xf7, 0x60, 0x40, 0xf, 0x44, 0x0, 0xf, 0x44, 0xf5, 0x4, 0x4f, 0x76
};

const uint8_t PROGMEM overworld_room0_0[] = {
    2, // number of entities

    // entity 0
    miscAndEntityType(0, SECRET_WALL),
    xy(48, 32),

    // entity 1
    miscAndEntityType(2, TELEPORTER),
    xy(48, 32),
};



const uint8_t PROGMEM overworld_room0_4[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, BLOB),
    xy(24, 28),
};



const uint8_t PROGMEM overworld_room1_2[] = {
    2, // number of entities

    // entity 0
    miscAndEntityType(0, TRIGGER_DOOR),
    xy(64, 44),

    // entity 1
    miscAndEntityType(0, SWITCH),
    xy(32, 20),
};



const uint8_t PROGMEM overworld_room1_4[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(1, CHEST),
    xy(96, 28),
};



const uint8_t PROGMEM overworld_room1_5[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, SKELETON),
    xy(48, 32),
};



const uint8_t PROGMEM overworld_room1_6[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(3, CHEST),
    xy(56, 20),
};



const uint8_t PROGMEM overworld_room2_2[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(2, CHEST),
    xy(24, 16),
};



const uint8_t PROGMEM overworld_room4_6[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(1, TELEPORTER),
    xy(64, 4),
};



const uint8_t PROGMEM overworld_room6_0[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, TELEPORTER),
    xy(80, 24),
};



const uint8_t PROGMEM overworld_room6_3[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, SECRET_WALL),
    xy(64, 48),
};

const uint8_t PROGMEM overworld_teleporters[] = {
    // dest x, dest y (in rooms)
    3, 7,
    0, 7,
    0, 0,
};





const uint8_t * const PROGMEM overworld_row0[7] = {
    overworld_room0_0,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    overworld_room6_0
};


const uint8_t * const PROGMEM overworld_row1[7] = {
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM overworld_row2[7] = {
    empty_room,
    overworld_room1_2,
    overworld_room2_2,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM overworld_row3[7] = {
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    overworld_room6_3
};


const uint8_t * const PROGMEM overworld_row4[7] = {
    overworld_room0_4,
    overworld_room1_4,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM overworld_row5[7] = {
    empty_room,
    overworld_room1_5,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM overworld_row6[7] = {
    empty_room,
    overworld_room1_6,
    empty_room,
    empty_room,
    overworld_room4_6,
    empty_room,
    empty_room
};


const uint8_t * const* const PROGMEM overworld_entities[7] = {
    overworld_row0,
    overworld_row1,
    overworld_row2,
    overworld_row3,
    overworld_row4,
    overworld_row5,
    overworld_row6
};


#endif