#ifndef dungeons_h
#define dungeons_h

#include "emptyRoom.h"
#include "entityTypes.h"
#include "entityExpressions.h"


const uint8_t PROGMEM dungeons_map[651] = {
    // array length (16 bit, little endian), map width, map height (in rooms)
    139, 2, 8, 8,
    // room indices (16 bit, little endian), 128 bytes
    // room 0, index 0
    0, 0,
    // room 1, index 8
    8, 0,
    // room 2, index 13
    13, 0,
    // room 3, index 18
    18, 0,
    // room 4, index 23
    23, 0,
    // room 5, index 28
    28, 0,
    // room 6, index 33
    33, 0,
    // room 7, index 38
    38, 0,
    // room 8, index 46
    46, 0,
    // room 9, index 56
    56, 0,
    // room 10, index 64
    64, 0,
    // room 11, index 74
    74, 0,
    // room 12, index 82
    82, 0,
    // room 13, index 87
    87, 0,
    // room 14, index 95
    95, 0,
    // room 15, index 105
    105, 0,
    // room 16, index 115
    115, 0,
    // room 17, index 123
    123, 0,
    // room 18, index 131
    131, 0,
    // room 19, index 143
    143, 0,
    // room 20, index 153
    153, 0,
    // room 21, index 163
    163, 0,
    // room 22, index 171
    171, 0,
    // room 23, index 179
    179, 0,
    // room 24, index 189
    189, 0,
    // room 25, index 199
    199, 0,
    // room 26, index 207
    207, 0,
    // room 27, index 217
    217, 0,
    // room 28, index 228
    228, 0,
    // room 29, index 236
    236, 0,
    // room 30, index 244
    244, 0,
    // room 31, index 252
    252, 0,
    // room 32, index 260
    4, 1,
    // room 33, index 272
    16, 1,
    // room 34, index 282
    26, 1,
    // room 35, index 291
    35, 1,
    // room 36, index 299
    43, 1,
    // room 37, index 309
    53, 1,
    // room 38, index 317
    61, 1,
    // room 39, index 320
    64, 1,
    // room 40, index 328
    72, 1,
    // room 41, index 338
    82, 1,
    // room 42, index 346
    90, 1,
    // room 43, index 354
    98, 1,
    // room 44, index 359
    103, 1,
    // room 45, index 362
    106, 1,
    // room 46, index 370
    114, 1,
    // room 47, index 378
    122, 1,
    // room 48, index 386
    130, 1,
    // room 49, index 396
    140, 1,
    // room 50, index 406
    150, 1,
    // room 51, index 415
    159, 1,
    // room 52, index 425
    169, 1,
    // room 53, index 435
    179, 1,
    // room 54, index 443
    187, 1,
    // room 55, index 451
    195, 1,
    // room 56, index 461
    205, 1,
    // room 57, index 473
    217, 1,
    // room 58, index 481
    225, 1,
    // room 59, index 491
    235, 1,
    // room 60, index 496
    240, 1,
    // room 61, index 501
    245, 1,
    // room 62, index 506
    250, 1,
    // room 63, index 511
    255, 1,

    // compressed room data, 519 bytes
    0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xf7, 0xdf, 0xf0, 0xf6, 0x0, 0xf7, 0xdf, 0xf0, 0xf6, 0x0, 0xf7, 0xdf, 0xf0, 0xf6, 0x0, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0xaf, 0x63, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0x33, 0x30, 0x33, 0xc0, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xff, 0xf, 0x60, 0xf7, 0x30, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xaf, 0x63, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x1d, 0xd0, 0xdd, 0xb2, 0xf5, 0xe, 0x66, 0x65, 0x66, 0x62, 0xf5, 0xe, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0xa3, 0x30, 0x33, 0x30, 0xf7, 0xdf, 0xb0, 0x66, 0x6f, 0x43, 0x63, 0x30, 0xf6, 0xe, 0xf6, 0xe, 0x66, 0x65, 0x66, 0x6f, 0x60, 0x40, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0x33, 0x3, 0x3c, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0x1d, 0xd0, 0xdd, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0x33, 0x3, 0x3c, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x2f, 0x50, 0x42, 0xf5, 0x4, 0x2f, 0x60, 0xaf, 0x63, 0xfa, 0x40, 0x44, 0x4f, 0x60, 0xef, 0x63, 0xc0, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0xaf, 0x63, 0xff, 0xf, 0xd0, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0x1d, 0xd0, 0xdd, 0xd2, 0xf6, 0x2, 0xf6, 0xa, 0xf6, 0x30, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0xaf, 0x63, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xff, 0xf, 0xd0, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x60, 0x2f, 0x50, 0xe0, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0xf7, 0xa, 0xf5, 0x3c, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0xf6, 0xe, 0xaf, 0x53, 0xc0, 0x2f, 0x50, 0xe2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0x2f, 0x60, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0x1f, 0x5d, 0xb2, 0xf5, 0xe, 0x2f, 0x50, 0xea, 0xf5, 0x3c, 0x1d, 0x6f, 0x4d, 0x66, 0x6f, 0x40, 0x2f, 0x60, 0xa3, 0x30, 0x33, 0x30, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c, 0x1f, 0x6d, 0x2f, 0x60, 0x2f, 0x60, 0xa3, 0x30, 0x33, 0x30, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xf7, 0xdf, 0xe0, 0xf7, 0x30, 0xff, 0xf, 0x60, 0xf7, 0x30, 0xff, 0xf, 0x60, 0xf7, 0x30, 0xf6, 0xdb, 0xf6, 0xe, 0xf6, 0xe, 0xf6, 0x3c
};

const uint8_t PROGMEM dungeons_room0_3[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(4, CHEST),
    xy(48, 20),
};



const uint8_t PROGMEM dungeons_room0_4[] = {
    4, // number of entities

    // entity 0
    miscAndEntityType(1, TRIGGER_DOOR),
    xy(48, 60),

    // entity 1
    miscAndEntityType(1, TRIGGER_DOOR),
    xy(48, 4),

    // entity 2
    miscAndEntityType(1, SKELETON),
    xy(88, 24),

    // entity 3
    miscAndEntityType(1, SKELETON),
    xy(24, 24),
};



const uint8_t PROGMEM dungeons_room0_7[] = {
    3, // number of entities

    // entity 0
    miscAndEntityType(0, TELEPORTER),
    xy(48, 52),

    // entity 1
    miscAndEntityType(0, KEY),
    xy(24, 8),

    // entity 2
    miscAndEntityType(0, TORCH),
    xy(80, 8),
};



const uint8_t PROGMEM dungeons_room1_6[] = {
    3, // number of entities

    // entity 0
    miscAndEntityType(0, LOCK),
    xy(96, 32),

    // entity 1
    miscAndEntityType(5, POT),
    xy(16, 20),

    // entity 2
    miscAndEntityType(0, POT),
    xy(40, 20),
};



const uint8_t PROGMEM dungeons_room2_2[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, BOSS_LOCK),
    xy(48, 0),
};



const uint8_t PROGMEM dungeons_room2_6[] = {
    5, // number of entities

    // entity 0
    miscAndEntityType(1, SKELETON),
    xy(48, 20),

    // entity 1
    miscAndEntityType(0, SKELETON),
    xy(64, 44),

    // entity 2
    miscAndEntityType(0, SKELETON),
    xy(48, 52),

    // entity 3
    miscAndEntityType(1, TRIGGER_DOOR),
    xy(96, 36),

    // entity 4
    miscAndEntityType(1, TRIGGER_DOOR),
    xy(0, 36),
};



const uint8_t PROGMEM dungeons_room2_7[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(1, TELEPORTER),
    xy(48, 52),
};



const uint8_t PROGMEM dungeons_room3_4[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(0, SECRET_WALL),
    xy(48, 0),
};



const uint8_t PROGMEM dungeons_room3_6[] = {
    1, // number of entities

    // entity 0
    miscAndEntityType(1, CHEST),
    xy(48, 24),
};

const uint8_t PROGMEM dungeons_teleporters[] = {
    // dest x, dest y (in rooms)
    4, 6,
    6, 0,
};





const uint8_t * const PROGMEM dungeons_row0[8] = {
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row1[8] = {
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row2[8] = {
    empty_room,
    empty_room,
    dungeons_room2_2,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row3[8] = {
    dungeons_room0_3,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row4[8] = {
    dungeons_room0_4,
    empty_room,
    empty_room,
    dungeons_room3_4,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row5[8] = {
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row6[8] = {
    empty_room,
    dungeons_room1_6,
    dungeons_room2_6,
    dungeons_room3_6,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const PROGMEM dungeons_row7[8] = {
    dungeons_room0_7,
    empty_room,
    dungeons_room2_7,
    empty_room,
    empty_room,
    empty_room,
    empty_room,
    empty_room
};


const uint8_t * const* const PROGMEM dungeons_entities[8] = {
    dungeons_row0,
    dungeons_row1,
    dungeons_row2,
    dungeons_row3,
    dungeons_row4,
    dungeons_row5,
    dungeons_row6,
    dungeons_row7
};


#endif